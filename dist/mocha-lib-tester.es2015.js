/*! @comandeer/mocha-lib-tester v0.2.1 | (c) 2021 Comandeer | MIT license (see LICENSE) */
import{ESLint as e}from"eslint";import{sync as t}from"glob";import r from"eslint/lib/cli-engine/formatters/stylish.js";import o,{reporters as n}from"mocha";import{format as s}from"util";import{resolve as i}from"path";import{addHook as c}from"pirates";import a from"@babel/register";import p from"@babel/preset-env";import{createInstrumenter as l}from"istanbul-lib-instrument";import{createCoverageMap as u}from"istanbul-lib-coverage";import m from"istanbul-lib-report";import d from"istanbul-reports";import{exec as f}from"child_process";import h from"is-ci";import{Enumify as g}from"enumify";import y from"events";import E from"chalk";function w(e,t){t.log(r(e))}function b(r){if("string"!=typeof r||0===r.length)throw new TypeError("Provided path must be a non-empty string");return new e({useEslintrc:!1,cwd:r,baseConfig:{extends:"@comandeer/eslint-config"},overrideConfig:{ignorePatterns:["tests/fixtures/**/*.js"]}}).lintFiles((o=r,["src/**/*.js","bin/**/*","tests/**/*.js"].filter((e=>t(e,{cwd:o}).length>0)))).then((e=>({name:"linter",ok:v(e),results:e,reporter:w})));var o}function v(e){return e.every((({errorCount:e})=>0===e))}const{Base:R,Spec:C}=n;class S extends C{constructor(e){const t=[],r={};let o=!0;const n=R.consoleLog;R.consoleLog=function(...e){t.push(s(...e))},super(e),e.on("test end",(({file:e,state:t,title:o})=>{void 0===r[e]&&(r[e]={}),r[e][o]=t})),e.once("fail",(()=>{o=!1})),e.once("end",(()=>{R.consoleLog=n,e.suite.results={results:r,ok:o,reporter(e,r){r.log(t.join("\n"))}}}))}}function T(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");!function(e){const t=i(e,"tests"),r=i(t,"fixtures");c((e=>`import{expect}from"chai";import{use as chaiUse}from"chai";import sinon from"sinon";import chaiAsPromised from"chai-as-promised";import sinonChai from"sinon-chai";import{noCallThru as pqNoCallThru}from"proxyquire";chaiUse(chaiAsPromised),chaiUse(sinonChai);const proxyquire=pqNoCallThru();${e}`),{exts:[".js"],matcher:e=>e.startsWith(t)&&!e.startsWith(r)})}(e),a({babelrc:!1,presets:[[p,{targets:{node:"12.0.0"}}]]}),function(e){const t=i(e,"src"),r=l({coverageVariable:"__mltCoverage__"});c(((e,t)=>r.instrumentSync(e,t)),{exts:[".js"],matcher:e=>e.startsWith(t)})}(e);const r=new o({reporter:S,timeout:15e3});return t("tests/**/*.js",{cwd:e,ignore:["tests/fixtures/**/*.js","tests/helpers/**/*.js"],realpath:!0}).forEach((e=>{r.addFile(e)})),new Promise((e=>{r.run((()=>{e({name:"tester",...r.suite.results})}))}))}function x(e){return function(t){const r=m.createContext({dir:i(e,".coverage"),defaultSummarizer:"nested",watermarks:{statements:[50,80],functions:[50,80],branches:[50,80],lines:[50,80]},coverageMap:t}),o=d.create("lcovonly"),n=d.create("text");o.execute(r),n.execute(r)}}class L extends g{}L.AUTO=new L,L.BLUE=new L,L.YELLOW=new L,L.GREEN=new L,L.RED=new L,L.closeEnum();class O extends g{}function j(e,t){e.skipped?t.log("CodeCov upload skipped",{color:L.YELLOW}):(t.log(e.stdout),e.stderr&&t.log(e.stderr,{type:O.ERROR,color:L.RED}))}function _(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");const t={name:"codecov",reporter:j};return!h||process.env.NO_CODECOV?Object.assign({},t,{ok:!0,results:{skipped:!0}}):function(e){const t=i(__dirname,"..","node_modules","codecov","bin","codecov");return new Promise((r=>{const o=f(`node ${t}`,{cwd:e},((e,t,n)=>{r({exitCode:o.exitCode,stdout:t,stderr:n})}))}))}(e).then((({exitCode:e,stdout:r,stderr:o})=>Object.assign({},t,{ok:0===e,results:{stdout:r,stderr:o}})))}O.LOG=new O,O.ERROR=new O,O.closeEnum();const k=Symbol("steps");class P extends y{constructor(){super(),this[k]=Object.freeze(new Set)}get steps(){return this[k]}addStep(e){if(!A(e))throw new TypeError("Provided object must be a valid step definition");this.steps.add(e)}addSteps(e){if(!(Array.isArray(e)&&e.every((e=>A(e)))))throw new TypeError("Provided array must contain only valid step definitions");e.forEach((e=>{this.addStep(e)}))}run(){this.emit("start");const e=[...this.steps];return this._processSteps(e)}async _processSteps(e){const t=e=>(this.emit("end",e),e),r=e.shift();if(!r)return t(!0);this.emit("step:start",r);try{const o=await r.run();if(!function(e){if(!e||"object"!=typeof e)return!1;const t=e.results&&"object"==typeof e.results,r="function"==typeof e.reporter;return t&&r}(o))throw new TypeError(`Step ${r.name} didn't return correct results`);if(this.emit("step:end",r,o),!o.ok)return t(!1);if(0===e.length)return t(!0)}catch(e){return this.emit("error",e),t(!1)}return this._processSteps(e)}}function A(e){if(!e||"object"!=typeof e)return!1;const t="string"==typeof e.name&&e.name.trim().length>0,r="function"==typeof e.run;return t&&r}const U=new Map([[L.AUTO,e=>e],[L.BLUE,e=>E.blue(e)],[L.YELLOW,e=>E.yellow(e)],[L.GREEN,e=>E.green(e)],[L.RED,e=>E.red(e)]]);class D{constructor(e){if(!(e instanceof y))throw new TypeError("The passed runner parameter is not an EventEmitter instance");this.runner=e,function(e){const t=e.runner;t.on("start",e.onStart.bind(e)),t.on("step:start",e.onStepStart.bind(e)),t.on("step:end",e.onStepEnd.bind(e)),t.on("end",e.onEnd.bind(e)),t.on("error",e.onError.bind(e))}(this)}log(e,{type:t=O.LOG,color:r=L.AUTO}={}){if(!(t instanceof O))throw new TypeError("Type option must be a LoggerType instance");if(!(r instanceof L))throw new TypeError("Color option must a LoggerColor instance");const o=t===O.LOG?"log":"error",n=U.get(r);console[o](n(e))}onStart(){this.log("MLT v0.2.1"),this.log("Executing testsâ€¦",{color:L.YELLOW})}onStepStart({name:e}){this.log(`---${e}---`,{color:L.BLUE})}onStepEnd({name:e},{ok:t,results:r,reporter:o}){if(o(r,this),!t)return this.log(`Step ${E.bold(e)} failed with errors. Skipping subsequent steps.`,{color:L.RED,type:O.ERROR});this.log(`Step ${E.bold(e)} finished successfully.`,{color:L.GREEN})}onEnd(e){if(!e)return this.log("There were some errors alonside the way ðŸ˜¿",{color:L.RED});this.log("All steps finished correctly ðŸŽ‰",{color:L.GREEN})}onError(e){this.log("ðŸš¨ Error occured:",{color:L.RED,type:O.ERROR}),this.log(e,{type:O.ERROR})}}async function G(){const e=process.cwd(),t=[{name:"Linter",run:()=>b(e)},{name:"Tester",run:()=>T(e)},{name:"Code Coverage",run:()=>function(e,t){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");if(!t||"object"!=typeof t||Array.isArray(t))throw new TypeError("Provided code coverage data must be an object");const r=u(t);return Promise.resolve({name:"code coverage",ok:!0,results:r,reporter:x(e)})}(e,global.__mltCoverage__)},{name:"CodeCov",run:()=>_(e)}],r=new P;new D(r),r.addSteps(t);return await r.run()?0:1}export default G;
//# sourceMappingURL=mocha-lib-tester.es2015.js.map
