/*! @comandeer/mocha-lib-tester v0.5.0 | (c) 2021 Comandeer | MIT license (see LICENSE) */
import e from"events";import t from"chalk";import r from"gauge";import{Enumify as o}from"enumify";import n from"chokidar";import{ESLint as s}from"eslint";import{sync as i}from"glob";import c from"eslint/lib/cli-engine/formatters/stylish.js";import a,{reporters as u}from"mocha";import{format as p}from"util";import{resolve as l}from"path";import{addHook as h}from"pirates";import d from"@babel/register";import m from"@babel/preset-env";import{createInstrumenter as f}from"istanbul-lib-instrument";import{createCoverageMap as g}from"istanbul-lib-coverage";import w from"istanbul-lib-report";import y from"istanbul-reports";import{exec as b}from"child_process";import E from"is-ci";import v from"npm-run-path";const T=Symbol("steps");class S extends e{constructor(){super(),this[T]=Object.freeze(new Set)}get steps(){return this[T]}addStep(e){if(!R(e))throw new TypeError("Provided object must be a valid step definition");this.steps.add(e)}addSteps(e){if(!(Array.isArray(e)&&e.every((e=>R(e)))))throw new TypeError("Provided array must contain only valid step definitions");e.forEach((e=>{this.addStep(e)}))}run(e=process.cwd()){if(!("string"==typeof(t=e)&&t.trim().length>0))throw new TypeError("Provided path must be a non-empty string");var t;this.emit("start");const r=[...this.steps];return this._processSteps(r,e)}async _processSteps(e,t){const r=e=>(this.emit("end",e),e),o=e.shift();if(!o)return r(!0);this.emit("step:start",o);try{const n=await o.run(t);if(!function(e){if(!e||"object"!=typeof e)return!1;const t=e.results&&"object"==typeof e.results,r="function"==typeof e.reporter;return t&&r}(n))throw new TypeError(`Step ${o.name} didn't return correct results`);if(this.emit("step:end",o,n),!n.ok)return r(!1);if(0===e.length)return r(!0)}catch(e){return this.emit("error",e),r(!1)}return this._processSteps(e,t)}}function R(e){if(!e||"object"!=typeof e)return!1;const t=function(e){if("string"!=typeof e||0===e.trim().length)return!1;const t=e===e.toLowerCase(),r=!/\s/.test(e);return t&&r}(e.id),r="string"==typeof e.name&&e.name.trim().length>0,o="function"==typeof e.run;return t&&r&&o}class C extends o{}C.AUTO=new C,C.BLUE=new C,C.YELLOW=new C,C.GREEN=new C,C.RED=new C,C.closeEnum();class j extends o{}j.LOG=new j,j.ERROR=new j,j.closeEnum();const L=new Map([[C.AUTO,e=>e],[C.BLUE,e=>t.blue(e)],[C.YELLOW,e=>t.yellow(e)],[C.GREEN,e=>t.green(e)],[C.RED,e=>t.red(e)]]),O=new r(process.stdout,{template:[{type:"activityIndicator",kerning:1,length:1},{type:"section",kerning:1,default:"Workingâ€¦"}]});let x;class k{constructor(t){if(!(t instanceof e))throw new TypeError("The passed runner parameter is not an EventEmitter instance");this.runner=t,function(e){const t=e.runner;t.on("start",e.onStart.bind(e)),t.on("step:start",e.onStepStart.bind(e)),t.on("step:end",e.onStepEnd.bind(e)),t.on("end",e.onEnd.bind(e)),t.on("error",e.onError.bind(e))}(this)}log(e,{type:t=j.LOG,color:r=C.AUTO}={}){if(!(t instanceof j))throw new TypeError("Type option must be a LoggerType instance");if(!(r instanceof C))throw new TypeError("Color option must a LoggerColor instance");const o=t===j.LOG?"log":"error",n=L.get(r);console[o](n(e))}onStart(){this.log("Executing testsâ€¦",{color:C.YELLOW})}onStepStart({name:e}){this.log(`---${e}---`,{color:C.BLUE}),function(){const e=()=>{O.pulse(),x=setTimeout(e,500)};O.show("Workingâ€¦"),e()}()}onStepEnd({name:e},{ok:r,results:o,reporter:n}){if(clearTimeout(x),O.hide(),x=null,n(o,this),!r)return this.log(`Step ${t.bold(e)} failed with errors. Skipping subsequent steps.`,{color:C.RED,type:j.ERROR});this.log(`Step ${t.bold(e)} finished successfully.`,{color:C.GREEN})}onEnd(e){if(!e)return this.log("There were some errors alonside the way ðŸ˜¿",{color:C.RED});this.log("All steps finished correctly ðŸŽ‰",{color:C.GREEN})}onError(e){this.log("ðŸš¨ Error occured:",{color:C.RED,type:j.ERROR}),this.log(e,{type:j.ERROR})}}function P(e,t){t.log(c(e))}function W(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");return new s({useEslintrc:!1,cwd:e,baseConfig:{extends:"@comandeer/eslint-config"},overrideConfig:{ignorePatterns:["tests/fixtures/**/*.js"]}}).lintFiles((t=e,["src/**/*.js","bin/**/*","tests/**/*.js"].filter((e=>i(e,{cwd:t}).length>0)))).then((e=>({name:"linter",ok:_(e),results:e,reporter:P})));var t}function _(e){return e.every((({errorCount:e})=>0===e))}const{Base:A,Spec:q}=u;class U extends q{constructor(e){const t=[],r={};let o=!0;const n=A.consoleLog;A.consoleLog=function(...e){t.push(p(...e))},super(e),e.on("test end",(({file:e,state:t,title:o})=>{void 0===r[e]&&(r[e]={}),r[e][o]=t})),e.once("fail",(()=>{o=!1})),e.once("end",(()=>{A.consoleLog=n,e.suite.results={results:r,ok:o,reporter(e,r){r.log(t.join("\n"))}}}))}}const $='import{expect}from"chai";import{use as chaiUse}from"chai";import sinon from"sinon";import chaiAsPromised from"chai-as-promised";import sinonChai from"sinon-chai";import{noCallThru as pqNoCallThru}from"proxyquire";chaiUse(chaiAsPromised),chaiUse(sinonChai);const proxyquire=pqNoCallThru();',D=new Set;function G(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");var t;!function(e){if(D.has(e))return;const t=l(e,"tests"),r=l(t,"fixtures");h((e=>e.startsWith($)?e:`${$}${e}`),{exts:[".js"],matcher:e=>e.startsWith(t)&&!e.startsWith(r)}),D.add(e)}(e),d({cache:!1,babelrc:!1,presets:[[m,{targets:{node:"12.0.0"}}]]}),function(e){const t=l(e,"src"),r=f({coverageVariable:"__mltCoverage__"});h(((e,t)=>r.instrumentSync(e,t)),{exts:[".js"],matcher:e=>e.startsWith(t)})}(e),t=e,Object.keys(require.cache).forEach((e=>{e.startsWith(t)&&delete require.cache[e]}));const r=new a({reporter:U,timeout:15e3});return i("tests/**/*.js",{cwd:e,ignore:["tests/fixtures/**/*.js","tests/helpers/**/*.js"],realpath:!0}).forEach((e=>{r.addFile(e)})),new Promise((e=>{r.run((()=>{e({name:"tester",...r.suite.results})}))}))}function N(e){return function(t){const r=w.createContext({dir:l(e,".coverage"),defaultSummarizer:"nested",watermarks:{statements:[50,80],functions:[50,80],branches:[50,80],lines:[50,80]},coverageMap:t}),o=y.create("lcovonly"),n=y.create("text");o.execute(r),n.execute(r)}}function B(e,t){e.skipped?t.log("CodeCov upload skipped",{color:C.YELLOW}):(t.log(e.stdout),e.stderr&&t.log(e.stderr,{type:j.ERROR,color:C.RED}))}function M(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");const t={name:"codecov",reporter:B};return!E||process.env.NO_CODECOV?Object.assign({},t,{ok:!0,results:{skipped:!0}}):function(e){return new Promise((t=>{const r=b("codecov",{cwd:e,env:v.env()},((e,o,n)=>{t({exitCode:r.exitCode,stdout:o,stderr:n})}))}))}(e).then((({exitCode:e,stdout:r,stderr:o})=>Object.assign({},t,{ok:0===e,results:{stdout:r,stderr:o}})))}const Y=[{id:"lint",name:"Linter",watchable:!0,run:e=>W(e)},{id:"test",name:"Tester",watchable:!0,run:e=>G(e)},{id:"coverage",name:"Code Coverage",watchable:!0,run:e=>function(e,t){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");if(!t||"object"!=typeof t||Array.isArray(t))throw new TypeError("Provided code coverage data must be an object");const r=g(t);return Promise.resolve({name:"code coverage",ok:!0,results:r,reporter:N(e)})}(e,global.__mltCoverage__)},{id:"codecov",name:"CodeCov",watchable:!1,run:e=>M(e)}];const I=Symbol("config"),z=Symbol("bannerEmitted"),F=Symbol("isInTheMiddleOfRun"),V=Symbol("scheduledRun");class H{constructor(e,t,r={}){if(!(e instanceof S))throw new TypeError("The runner parameter must be a valid Runner instance.");if(!(t instanceof k))throw new TypeError("The logger parameter must be a valid Logger instance.");if(!r||Array.isArray(r)||"object"!=typeof r)throw new TypeError("The config parameter must be an object.");this.runner=e,this.logger=t,this.watcher=null,this.continuous=!1,this[I]=r,this[z]=!1,this[F]=!1,this._init(r)}async run(){if(this[z]||(this.logger.log("MLT v0.5.0"),this[z]=!0),this[F])return;this[F]=!0;const e=await this.runner.run(this.path)?0:1;return this[F]=!1,e}watch(){const e=n.watch("{bin,src,tests}/**/*.js",{persistent:!0,ignoreInitial:!0,cwd:process.cwd()});return e.on("all",(()=>{this.scheduleRun()})),this.continuous=!0,this.watcher=e,e}scheduleRun(){if(!this[V]){if(!this[F])return this.run();this[V]=!0,this.runner.once("end",(()=>{this[V]=!1,this.run()}))}}start(){return this[I].isWatch&&this.watch(),this.run()}_init({path:e=process.cwd(),requestedSteps:t=["lint","test","coverage","codecov"],isWatch:r=!1}={}){this.path=e;const o=function({requestedSteps:e,isWatch:t=!1}={}){const r=e.map((e=>Y.find((t=>t.id===e))||e)),o=r.filter((e=>"string"==typeof e));if(o.length>0){const e=o.map((e=>`"${e}"`)).join(", ");throw new TypeError(`Provided step names (${e}) are incorrect`)}if(t)return r.filter((e=>e.watchable));return r}({requestedSteps:t,isWatch:r});this.runner.addSteps(o)}}function J(e){const t=new S,r=new k(t);return new H(t,r,e)}export default J;
//# sourceMappingURL=mocha-lib-tester.es2015.js.map
