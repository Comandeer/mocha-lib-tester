{"version":3,"file":"linter.js","sources":["../../src/EventEmitter.js","../../src/Runner.js","../../src/LoggerColor.js","../../src/LoggerType.js","../../src/Logger.js","../../src/codeCoverage.js","../../src/steps.js","../../src/reporters/linter.js","../../src/reporters/codeCoverage.js","../../src/reporters/codecov.js","../../src/RunController.js","../../src/helpers/prepareSteps.js","../../src/helpers/globPromise.js","../../src/linter.js","../../src/reporters/MochaReporter.js","../../src/hooks/chai.js","../../src/codecov.js","../../src/mlt.js","../../src/tester.js","../../src/hooks/babel.js","../../src/hooks/istanbul.js","../../src/workers/linter.js"],"sourcesContent":["const listenersSymbol = Symbol( 'listeners' );\nconst onceListenersSymbol = Symbol( 'onceListeners' );\n\nclass EventEmitter {\n\tconstructor() {\n\t\tthis[ listenersSymbol ] = new Map();\n\t\tthis[ onceListenersSymbol ] = new Map();\n\t}\n\n\ton( name, listener ) {\n\t\tconst listeners = this._getListenersCollection( name );\n\n\t\tlisteners.add( listener );\n\t}\n\n\tonce( eventName, listener ) {\n\t\tthis.on( eventName, listener );\n\n\t\tconst onceListeners = this._getListenersCollection( eventName, this[ onceListenersSymbol ] );\n\n\t\tonceListeners.add( listener );\n\t}\n\n\toff( eventName, listener ) {\n\t\tconst listeners = this._getListenersCollection( eventName );\n\t\tconst onceListeners = this._getListenersCollection( eventName, this[ onceListenersSymbol ] );\n\n\t\tlisteners.delete( listener );\n\t\tonceListeners.delete( listener );\n\t}\n\n\tasync emit( eventName, ...eventData ) {\n\t\tconst listeners = this._getListenersCollection( eventName );\n\t\tconst onceListeners = this._getListenersCollection( eventName, this[ onceListenersSymbol ] );\n\n\t\tfor ( const listener of listeners ) {\n\t\t\tawait listener( ...eventData ); // eslint-disable-line no-await-in-loop\n\n\t\t\tif ( onceListeners.has( listener ) ) {\n\t\t\t\tthis.off( eventName, listener );\n\t\t\t}\n\t\t}\n\t}\n\n\t_getListenersCollection( eventName, listeners = this[ listenersSymbol ] ) {\n\t\tif ( listeners.has( eventName ) ) {\n\t\t\treturn listeners.get( eventName );\n\t\t}\n\n\t\tconst newCollection = new Set();\n\n\t\tlisteners.set( eventName, newCollection );\n\n\t\treturn newCollection;\n\t}\n}\n\nexport default EventEmitter;\n","import EventEmitter from './EventEmitter.js';\n\nconst stepsSymbol = Symbol( 'steps' );\nconst stepResultsSymbol = Symbol( 'stepResults' );\n\nclass Runner extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis[ stepsSymbol ] = Object.freeze( new Set() );\n\t\tthis[ stepResultsSymbol ] = {};\n\t}\n\n\tget steps() {\n\t\treturn this[ stepsSymbol ];\n\t}\n\n\taddStep( step ) {\n\t\tconst stepIds = [ ...this.steps ].map( ( { id } ) => {\n\t\t\treturn id;\n\t\t} );\n\n\t\tif ( !isValidStep( step, stepIds ) ) {\n\t\t\tthrow new TypeError( 'Provided object must be a valid step definition' );\n\t\t}\n\n\t\tthis.steps.add( step );\n\t}\n\n\taddSteps( steps ) {\n\t\tconst isValidStepsArray = Array.isArray( steps ) && steps.every( ( step ) => {\n\t\t\treturn isValidStep( step );\n\t\t} );\n\n\t\tif ( !isValidStepsArray ) {\n\t\t\tthrow new TypeError( 'Provided array must contain only valid step definitions' );\n\t\t}\n\n\t\tsteps.forEach( ( step ) => {\n\t\t\tthis.addStep( step );\n\t\t} );\n\t}\n\n\tasync run( path = process.cwd() ) {\n\t\tif ( !isNonEmptyString( path ) ) {\n\t\t\tthrow new TypeError( 'Provided path must be a non-empty string' );\n\t\t}\n\n\t\tawait this.emit( 'start' );\n\n\t\tconst steps = [ ...this.steps ];\n\n\t\treturn this._processSteps( steps, path );\n\t}\n\n\tasync _processSteps( steps, path ) {\n\t\tconst finish = async ( result ) => {\n\t\t\tawait this.emit( 'end', result );\n\n\t\t\treturn result;\n\t\t};\n\t\tconst step = steps.shift();\n\t\tconst context = this._constructContext( path );\n\n\t\tif ( !step ) {\n\t\t\treturn finish( true );\n\t\t}\n\n\t\tawait this.emit( 'step:start', step, context );\n\n\t\ttry {\n\t\t\tconst requiresParameter = this._constructRequiresParameter( step );\n\n\t\t\tconst result = await step.run( path, requiresParameter );\n\n\t\t\tif ( !isValidResult( result ) ) {\n\t\t\t\tthrow new TypeError( `Step ${ step.name } didn't return correct results` );\n\t\t\t}\n\n\t\t\tthis[ stepResultsSymbol ][ step.id ] = result;\n\n\t\t\tawait this.emit( 'step:end', step, result, context );\n\n\t\t\tif ( !result.ok ) {\n\t\t\t\treturn finish( false );\n\t\t\t}\n\n\t\t\tif ( steps.length === 0 ) {\n\t\t\t\treturn finish( true );\n\t\t\t}\n\t\t} catch ( error ) {\n\t\t\tawait this.emit( 'error', error );\n\n\t\t\treturn finish( false );\n\t\t}\n\n\t\treturn this._processSteps( steps, path );\n\t}\n\n\t_constructRequiresParameter( { requires } ) {\n\t\tif ( !requires ) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn requires.reduce( ( parameter, stepId ) => {\n\t\t\tconst results = {\n\t\t\t\t[ stepId ]: this[ stepResultsSymbol ][ stepId ]\n\t\t\t};\n\n\t\t\treturn { ...parameter, ...results };\n\t\t}, {} );\n\t}\n\n\t_constructContext( projectPath ) {\n\t\treturn {\n\t\t\tprojectPath\n\t\t};\n\t}\n}\n\nfunction isNonEmptyString( value ) {\n\treturn typeof value === 'string' && value.trim().length > 0;\n}\n\nfunction isValidStep( step, stepIds ) {\n\tif ( !step || typeof step !== 'object' ) {\n\t\treturn false;\n\t}\n\n\tconst isIdValid = isValidStepId( step.id );\n\tconst isNameValid = typeof step.name === 'string' && step.name.trim().length > 0;\n\tconst isRunValid = typeof step.run === 'function';\n\tconst isReporterValid = typeof step.report === 'function';\n\tconst isRequiresValid = Array.isArray( stepIds ) ? isValidRequires( step.requires, stepIds ) : true;\n\n\treturn isIdValid && isNameValid && isRunValid && isReporterValid && isRequiresValid;\n\n\tfunction isValidStepId( id ) {\n\t\tif ( typeof id !== 'string' || id.trim().length === 0 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst whiteSpaceRegex = /\\s/;\n\t\tconst isLoweredCase = id === id.toLowerCase();\n\t\tconst isSpaceless = !whiteSpaceRegex.test( id );\n\n\t\treturn isLoweredCase && isSpaceless;\n\t}\n\n\tfunction isValidRequires( requires, availableSteps ) {\n\t\tif ( typeof requires === 'undefined' ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( typeof requires !== 'undefined' && !Array.isArray( requires ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn requires.every( ( requires ) => {\n\t\t\treturn availableSteps.includes( requires );\n\t\t} );\n\t}\n}\n\nfunction isValidResult( stepResults ) {\n\tif ( !stepResults || typeof stepResults !== 'object' ) {\n\t\treturn false;\n\t}\n\n\tconst isValidResults = stepResults.results && typeof stepResults.results === 'object';\n\n\treturn isValidResults;\n}\n\nexport default Runner;\n","import { Enumify } from 'enumify';\n\nclass LoggerColor extends Enumify {}\n\nLoggerColor.AUTO = new LoggerColor();\nLoggerColor.BLUE = new LoggerColor();\nLoggerColor.YELLOW = new LoggerColor();\nLoggerColor.GREEN = new LoggerColor();\nLoggerColor.RED = new LoggerColor();\n\nLoggerColor.closeEnum();\n\nexport default LoggerColor;\n","import { Enumify } from 'enumify';\n\nclass LoggerType extends Enumify {}\n\nLoggerType.LOG = new LoggerType();\nLoggerType.ERROR = new LoggerType();\n\nLoggerType.closeEnum();\n\nexport default LoggerType;\n","/* eslint-disable no-console */\n\nimport chalk from 'chalk';\nimport Spinner from '@comandeer/cli-spinner';\nimport LoggerColor from './LoggerColor.js';\nimport LoggerType from './LoggerType.js';\nimport EventEmitter from './EventEmitter.js';\n\nconst colorMethods = new Map( [\n\t[ LoggerColor.AUTO, ( value ) => {\n\t\treturn value;\n\t} ],\n\n\t[ LoggerColor.BLUE, ( value ) => {\n\t\treturn chalk.blue( value );\n\t} ],\n\n\t[ LoggerColor.YELLOW, ( value ) => {\n\t\treturn chalk.yellow( value );\n\t} ],\n\n\t[ LoggerColor.GREEN, ( value ) => {\n\t\treturn chalk.green( value );\n\t} ],\n\n\t[ LoggerColor.RED, ( value ) => {\n\t\treturn chalk.red( value );\n\t} ]\n] );\nconst spinner = new Spinner( {\n\tlabel: 'Workingâ€¦'\n} );\n\nclass Logger {\n\tconstructor( runner ) {\n\t\tif ( !( runner instanceof EventEmitter ) ) {\n\t\t\tthrow new TypeError( 'The passed runner parameter is not an EventEmitter instance' );\n\t\t}\n\n\t\tthis.runner = runner;\n\n\t\taddListeners( this );\n\t}\n\n\tlog( value, {\n\t\ttype = LoggerType.LOG,\n\t\tcolor = LoggerColor.AUTO\n\t} = {} ) {\n\t\tif ( !( type instanceof LoggerType ) ) {\n\t\t\tthrow new TypeError( 'Type option must be a LoggerType instance' );\n\t\t}\n\n\t\tif ( !( color instanceof LoggerColor ) ) {\n\t\t\tthrow new TypeError( 'Color option must a LoggerColor instance' );\n\t\t}\n\n\t\tconst consoleMethod = type === LoggerType.LOG ? 'log' : 'error';\n\t\tconst colorMethod = colorMethods.get( color );\n\n\t\tconsole[ consoleMethod ]( colorMethod( value ) );\n\t}\n\n\tasync onStart() {\n\t\tthis.log( 'Executing testsâ€¦', { color: LoggerColor.YELLOW } );\n\t}\n\n\tasync onStepStart( { name } ) {\n\t\tthis.log( `---${ name }---`, { color: LoggerColor.BLUE } );\n\t\tawait spinner.show();\n\t}\n\n\tasync onStepEnd( { name, report }, results, context ) {\n\t\tawait spinner.hide();\n\n\t\tawait report( results, this, context );\n\n\t\tif ( !results.ok ) {\n\t\t\treturn this.log( `Step ${ chalk.bold( name ) } failed with errors. Skipping subsequent steps.`, {\n\t\t\t\tcolor: LoggerColor.RED,\n\t\t\t\ttype: LoggerType.ERROR\n\t\t\t} );\n\t\t}\n\n\t\tthis.log( `Step ${ chalk.bold( name ) } finished successfully.`, { color: LoggerColor.GREEN } );\n\t}\n\n\tasync onEnd( result ) {\n\t\tawait spinner.hide();\n\n\t\tif ( !result ) {\n\t\t\treturn this.log( 'There were some errors alonside the way ðŸ˜¿', { color: LoggerColor.RED } );\n\t\t}\n\n\t\tthis.log( 'All steps finished correctly ðŸŽ‰', { color: LoggerColor.GREEN } );\n\t}\n\n\tasync onError( error ) {\n\t\tawait spinner.hide();\n\n\t\tthis.log( 'ðŸš¨ Error occured:', {\n\t\t\tcolor: LoggerColor.RED,\n\t\t\ttype: LoggerType.ERROR\n\t\t} );\n\t\tthis.log( error, { type: LoggerType.ERROR } );\n\t}\n}\n\nfunction addListeners( logger ) {\n\tconst runner = logger.runner;\n\n\trunner.on( 'start', logger.onStart.bind( logger ) );\n\trunner.on( 'step:start', logger.onStepStart.bind( logger ) );\n\trunner.on( 'step:end', logger.onStepEnd.bind( logger ) );\n\trunner.on( 'end', logger.onEnd.bind( logger ) );\n\trunner.on( 'error', logger.onError.bind( logger ) );\n}\n\nexport default Logger;\n","import { createCoverageMap } from 'istanbul-lib-coverage';\n\nasync function codeCoverage( projectPath, data ) {\n\tif ( typeof projectPath !== 'string' || projectPath.length === 0 ) {\n\t\tthrow new TypeError( 'Provided path must be a non-empty string' );\n\t}\n\n\tif ( !data || typeof data !== 'object' || Array.isArray( data ) ) {\n\t\tthrow new TypeError( 'Provided code coverage data must be an object' );\n\t}\n\n\tconst coverageMap = createCoverageMap( data );\n\n\treturn {\n\t\tname: 'code coverage',\n\t\tok: true,\n\t\tresults: coverageMap\n\t};\n}\n\nexport default codeCoverage;\n","/* istanbul ignore file */\n\nimport { spawn } from 'threads';\nimport { Thread } from 'threads';\nimport { Worker } from 'threads';\nimport codeCoverage from './codeCoverage.js';\nimport linterReporter from './reporters/linter';\nimport codeCoverageReporter from './reporters/codeCoverage';\nimport codecovReporter from './reporters/codecov';\n\nconst steps = [\n\t{\n\t\tid: 'lint',\n\t\tname: 'Linter',\n\t\twatchable: true,\n\t\trun( projectPath ) {\n\t\t\treturn spawnWorker( './workers/linter.js', projectPath );\n\t\t},\n\t\treport: linterReporter\n\t},\n\n\t{\n\t\tid: 'test',\n\t\tname: 'Tester',\n\t\twatchable: true,\n\t\trun( projectPath ) {\n\t\t\treturn spawnWorker( './workers/tester.js', projectPath );\n\t\t},\n\t\treport( { output }, logger ) {\n\t\t\tlogger.log( output );\n\t\t}\n\t},\n\n\t{\n\t\tid: 'coverage',\n\t\tname: 'Code Coverage',\n\t\twatchable: true,\n\t\trequires: [\n\t\t\t'test'\n\t\t],\n\t\trun( projectPath, { test: { coverage } } ) {\n\t\t\treturn codeCoverage( projectPath, coverage );\n\t\t},\n\t\treport: codeCoverageReporter\n\t},\n\n\t{\n\t\tid: 'codecov',\n\t\tname: 'CodeCov',\n\t\twatchable: false,\n\t\trequires: [\n\t\t\t'coverage'\n\t\t],\n\t\trun( projectPath ) {\n\t\t\treturn spawnWorker( './workers/codecov.js', projectPath );\n\t\t},\n\t\treport: codecovReporter\n\t}\n];\n\nasync function spawnWorker( workerPath, ...workerArgs ) {\n\tconst worker = new Worker( workerPath );\n\tconst workerAPI = await spawn( worker );\n\tconst result = await workerAPI( ...workerArgs );\n\n\tawait Thread.terminate( workerAPI );\n\n\treturn result;\n}\n\nexport default steps;\n","/* eslint-disable no-console */\n/* istanbul ignore file */\n\nimport { ESLint } from 'eslint';\n\nasync function linterReporter( { results }, logger ) {\n\tconst eslint = new ESLint();\n\tconst formatter = await eslint.loadFormatter( 'stylish' );\n\tconst formattedResults = formatter.format( results );\n\n\tlogger.log( formattedResults );\n}\n\nexport default linterReporter;\n","import { resolve as resolvePath } from 'path';\nimport libReport from 'istanbul-lib-report';\nimport reports from 'istanbul-reports';\n\nfunction codeCoverageReporter( { results: coverageMap }, logger, { projectPath } ) {\n\tconst configWatermarks = {\n\t\tstatements: [ 50, 80 ],\n\t\tfunctions: [ 50, 80 ],\n\t\tbranches: [ 50, 80 ],\n\t\tlines: [ 50, 80 ]\n\t};\n\tconst context = libReport.createContext( {\n\t\tdir: resolvePath( projectPath, '.coverage' ),\n\t\tdefaultSummarizer: 'nested',\n\t\twatermarks: configWatermarks,\n\t\tcoverageMap\n\t} );\n\tconst lcovReport = reports.create( 'lcovonly' );\n\tconst textReport = reports.create( 'text' );\n\n\tlcovReport.execute( context );\n\ttextReport.execute( context );\n}\n\nexport default codeCoverageReporter;\n","/* eslint-disable no-console */\n/* istanbul ignore file */\n\nimport LoggerColor from  '../LoggerColor.js';\nimport LoggerType from '../LoggerType.js';\n\nfunction codecovReporter( { results }, logger ) {\n\tif ( results.skipped ) {\n\t\tlogger.log( 'CodeCov upload skipped', {\n\t\t\tcolor: LoggerColor.YELLOW\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tlogger.log( results.stdout );\n\n\tif ( results.stderr ) {\n\t\tlogger.log( results.stderr, {\n\t\t\ttype: LoggerType.ERROR,\n\t\t\tcolor: LoggerColor.RED\n\t\t} );\n\t}\n}\n\nexport default codecovReporter;\n","import chokidar from 'chokidar';\nimport Logger from './Logger.js';\nimport Runner from './Runner.js';\nimport prepareSteps from './helpers/prepareSteps.js';\nimport { version } from '../package.json';\n\nconst configSymbol = Symbol( 'config' );\nconst bannerEmittedSymbol = Symbol( 'bannerEmitted' );\nconst isInTheMiddleOfRunSymbol = Symbol( 'isInTheMiddleOfRun' );\nconst scheduledRunSymbol = Symbol( 'scheduledRun' );\n\nclass RunController {\n\tconstructor( runner, logger, config = {} ) {\n\t\tif ( !( runner instanceof Runner ) ) {\n\t\t\tthrow new TypeError( 'The runner parameter must be a valid Runner instance.' );\n\t\t}\n\n\t\tif ( !( logger instanceof Logger ) ) {\n\t\t\tthrow new TypeError( 'The logger parameter must be a valid Logger instance.' );\n\t\t}\n\n\t\tif ( !config || Array.isArray( config ) || typeof config !== 'object' ) {\n\t\t\tthrow new TypeError( 'The config parameter must be an object.' );\n\t\t}\n\n\t\tthis.runner = runner;\n\t\tthis.logger = logger;\n\t\tthis.watcher = null;\n\t\tthis.continuous = false;\n\t\tthis[ configSymbol ] = config;\n\t\tthis[ bannerEmittedSymbol ] = false;\n\t\tthis[ isInTheMiddleOfRunSymbol ] = false;\n\n\t\tthis._init( config );\n\t}\n\n\tasync run() {\n\t\tif ( !this[ bannerEmittedSymbol ] ) {\n\t\t\tthis.logger.log( `MLT v${ version }` );\n\n\t\t\tthis[ bannerEmittedSymbol ] = true;\n\t\t}\n\n\t\tif ( this[ isInTheMiddleOfRunSymbol ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis[ isInTheMiddleOfRunSymbol ] = true;\n\n\t\tconst result = await this.runner.run( this.path );\n\t\tconst exitCode = result ? 0 : 1;\n\n\t\tthis[ isInTheMiddleOfRunSymbol ] = false;\n\n\t\treturn exitCode;\n\t}\n\n\twatch() {\n\t\tconst watcher = chokidar.watch( '{bin,src,tests}/**/*.js', {\n\t\t\tpersistent: true,\n\t\t\tignoreInitial: true,\n\t\t\tcwd: process.cwd()\n\t\t} );\n\n\t\twatcher.on( 'all', () => {\n\t\t\tthis.scheduleRun();\n\t\t} );\n\n\t\tthis.continuous = true;\n\t\tthis.watcher = watcher;\n\n\t\treturn watcher;\n\t}\n\n\tscheduleRun() {\n\t\tif ( this[ scheduledRunSymbol ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this[ isInTheMiddleOfRunSymbol ] ) {\n\t\t\treturn this.run();\n\t\t}\n\n\t\tthis[ scheduledRunSymbol ] = true;\n\n\t\tthis.runner.once( 'end', () => {\n\t\t\tthis[ scheduledRunSymbol ] = false;\n\t\t\tthis.run();\n\t\t} );\n\t}\n\n\tstart() {\n\t\tconst isWatch = this[ configSymbol ].isWatch;\n\n\t\tif ( isWatch ) {\n\t\t\tthis.watch();\n\t\t}\n\n\t\treturn this.run();\n\t}\n\n\t_init( {\n\t\tpath = process.cwd(),\n\t\trequestedSteps = [ 'lint', 'test', 'coverage', 'codecov' ],\n\t\tisWatch = false\n\t} = {} ) {\n\t\tthis.path = path;\n\n\t\tconst preparedSteps = prepareSteps ( {\n\t\t\trequestedSteps,\n\t\t\tisWatch\n\t\t} );\n\n\t\tthis.runner.addSteps( preparedSteps );\n\t}\n}\n\nexport default RunController;\n","import steps from '../steps.js';\n\nfunction prepareSteps( {\n\trequestedSteps,\n\tisWatch = false\n} = {} ) {\n\tconst filteredSteps = requestedSteps.map( ( id ) => {\n\t\tconst step = steps.find( ( step ) => {\n\t\t\treturn step.id === id;\n\t\t} );\n\n\t\treturn step || id;\n\t} );\n\tconst invalidSteps = filteredSteps.filter( ( step ) => {\n\t\treturn typeof step === 'string';\n\t} );\n\n\tif ( invalidSteps.length > 0 ) {\n\t\tconst stepNames = invalidSteps.map( ( step ) => {\n\t\t\treturn `\"${ step }\"`;\n\t\t} ).join( ', ' );\n\n\t\tthrow new TypeError( `Provided step names (${ stepNames }) are incorrect` );\n\t}\n\n\tif ( isWatch ) {\n\t\tconst watchableSteps = filteredSteps.filter( ( step ) => {\n\t\t\treturn step.watchable;\n\t\t} );\n\n\t\treturn watchableSteps;\n\t}\n\n\treturn filteredSteps;\n}\n\nexport default prepareSteps;\n","import { promisify } from 'util';\nimport glob from 'glob';\n\nconst globPromise = promisify( glob );\n\nexport default globPromise;\n","import { ESLint } from 'eslint';\nimport globPromise from './helpers/globPromise.js';\n\nasync function linter( projectPath ) {\n\tif ( typeof projectPath !== 'string' || projectPath.length === 0 ) {\n\t\tthrow new TypeError( 'Provided path must be a non-empty string' );\n\t}\n\n\tconst eslint = new ESLint( {\n\t\tuseEslintrc: false,\n\t\tcwd: projectPath,\n\t\tbaseConfig: {\n\t\t\textends: '@comandeer/eslint-config'\n\t\t},\n\t\toverrideConfig: {\n\t\t\tignorePatterns: [ 'tests/__fixtures__/**/*.js' ]\n\t\t}\n\t} );\n\n\tconst filesToLint = await prepareExistentFilePaths( projectPath );\n\tconst results = await eslint.lintFiles( filesToLint );\n\n\treturn {\n\t\tname: 'linter',\n\t\tok: isOk( results ),\n\t\tresults\n\t};\n}\n\n// Workaround for https://eslint.org/docs/5.0.0/user-guide/migrating-to-5.0.0#nonexistent-files\nasync function prepareExistentFilePaths( cwd ) {\n\tconst candidates = [\n\t\t'src/**/*.js',\n\t\t'bin/**/*',\n\t\t'tests/**/*.js'\n\t];\n\tconst candidatesPromises = candidates.map( ( candidate ) => {\n\t\treturn globPromise( candidate, {\n\t\t\tcwd\n\t\t} );\n\t} );\n\tconst globResults = await Promise.all( candidatesPromises );\n\n\treturn globResults.reduce( ( filteredCandidates, found, i ) => {\n\t\tif ( found.length === 0 ) {\n\t\t\treturn filteredCandidates;\n\t\t}\n\n\t\treturn [ ...filteredCandidates, candidates[ i ] ];\n\t}, [] );\n}\n\nfunction isOk( results ) {\n\treturn results.every( ( { errorCount } ) => {\n\t\treturn errorCount === 0;\n\t} );\n}\n\nexport default linter;\n","/* eslint-disable no-console */\n\nimport { format } from 'util';\nimport { reporters } from 'mocha';\n\nconst { Base, Spec } = reporters;\n\nclass MochaReporter extends Spec {\n\tconstructor( runner ) {\n\t\tconst output = [];\n\t\tconst results = {};\n\t\tlet ok = true;\n\t\tconst originalConsoleLog = Base.consoleLog;\n\n\t\tBase.consoleLog = function( ...args ) {\n\t\t\toutput.push( format( ...args ) );\n\t\t};\n\n\t\tsuper( runner );\n\n\t\trunner.on( 'test end', ( { file, state, title } ) => {\n\t\t\tif ( typeof results[ file ] === 'undefined' ) {\n\t\t\t\tresults[ file ] = {};\n\t\t\t}\n\n\t\t\tresults[ file ][ title ] = state;\n\t\t} );\n\n\t\trunner.once( 'fail', () => {\n\t\t\tok = false;\n\t\t} );\n\n\t\trunner.once( 'end', () => {\n\t\t\tBase.consoleLog = originalConsoleLog;\n\n\t\t\trunner.suite.results = {\n\t\t\t\tresults,\n\t\t\t\tok,\n\t\t\t\toutput: output.join( '\\n' )\n\t\t\t};\n\t\t} );\n\t}\n}\n\nexport default MochaReporter;\n","import { resolve as resolvePath } from 'path';\nimport { addHook } from 'pirates';\nconst chaiPreamble = 'import{expect}from\"chai\";import{use as chaiUse}from\"chai\";import sinon from\"sinon\";import chaiAsPromised from\"chai-as-promised\";import sinonChai from\"sinon-chai\";import{noCallThru as pqNoCallThru}from\"proxyquire\";chaiUse(chaiAsPromised),chaiUse(sinonChai);const proxyquire=pqNoCallThru();';\nconst added = new Set();\n\nfunction addChaiHook( projectPath ) {\n\tif ( added.has( projectPath ) ) {\n\t\treturn;\n\t}\n\n\tconst testsPath = resolvePath( projectPath, 'tests' );\n\tconst fixturesPath = resolvePath( testsPath, '__fixtures__' );\n\taddHook( ( code ) => {\n\t\tif ( code.startsWith( chaiPreamble ) ) {\n\t\t\treturn code;\n\t\t}\n\n\t\treturn `${chaiPreamble}${code}`;\n\t}, {\n\t\texts: [ '.js' ],\n\n\t\tmatcher( path ) {\n\t\t\treturn path.startsWith( testsPath ) && !path.startsWith( fixturesPath );\n\t\t}\n\n\t} );\n\tadded.add( projectPath );\n}\n\nexport default addChaiHook;\n","/* istanbul ignore file */\n\nimport { get } from 'https';\nimport { exec } from 'child_process';\nimport { createWriteStream } from 'fs';\nimport { promises } from 'fs';\nimport { pipeline } from 'stream';\nimport { promisify } from 'util';\nimport { resolve as resolvePath } from 'path';\nimport isCI from 'is-ci';\n\nconst chmod = promises.chmod;\nconst streamPipeline = promisify( pipeline );\n\nasync function codecov( projectPath ) {\n\tif ( typeof projectPath !== 'string' || projectPath.length === 0 ) {\n\t\tthrow new TypeError( 'Provided path must be a non-empty string' );\n\t}\n\n\tconst resultsTemplate = {\n\t\tname: 'codecov'\n\t};\n\n\tif ( !isCI || process.env.NO_CODECOV ) {\n\t\treturn Object.assign( {}, resultsTemplate, {\n\t\t\tok: true,\n\t\t\tresults: {\n\t\t\t\tskipped: true\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst codecovPath = await fetchUploader( process.platform, projectPath );\n\n\tawait chmod( codecovPath, '755' );\n\n\tconst { exitCode, stdout, stderr } = await executeCLI( codecovPath, projectPath );\n\n\treturn Object.assign( {}, resultsTemplate, {\n\t\tok: exitCode === 0,\n\t\tresults: {\n\t\t\tstdout,\n\t\t\tstderr\n\t\t}\n\t} );\n}\n\nasync function fetchUploader( platform, projectPath ) {\n\tconst supportedPlatforms = [\n\t\t'linux',\n\t\t'darwin',\n\t\t'win32'\n\t];\n\n\tif ( !supportedPlatforms.includes( platform ) ) {\n\t\tplatform = 'linux';\n\t}\n\n\tconst platformNames = {\n\t\tlinux: 'linux',\n\t\tdarwin: 'macos',\n\t\twin32: 'windows'\n\t};\n\tconst platformFiles = {\n\t\tlinux: 'codecov',\n\t\tdarwin: 'codecov',\n\t\twin32: 'codecov.exe'\n\t};\n\n\tconst platformName = platformNames[ platform ];\n\tconst platformFile = platformFiles[ platform ];\n\tconst uploaderURL = `https://uploader.codecov.io/latest/${ platformName }/${ platformFile }`;\n\n\ttry {\n\t\tconst uploaderData = await getPromise( uploaderURL );\n\t\tconst uploaderPath = resolvePath( projectPath, platformFile );\n\t\tconst uploaderFileStream = createWriteStream( uploaderPath );\n\n\t\tawait streamPipeline( uploaderData, uploaderFileStream );\n\n\t\treturn uploaderPath;\n\t} catch ( error ) {\n\t\tthrow new Error( 'Can\\'t download Codecov uploader' );\n\t}\n}\n\nfunction getPromise( url ) {\n\treturn new Promise( ( resolve, reject ) => {\n\t\tget( url, ( response ) => {\n\t\t\tif ( response.statusCode !== 200 ) {\n\t\t\t\treturn reject();\n\t\t\t}\n\n\t\t\tresolve( response );\n\t\t} ).on( 'error', reject );\n\t} );\n}\n\nfunction executeCLI( cliPath, projectPath ) {\n\treturn new Promise( ( resolve ) => {\n\t\tconst codecovProcess = exec( cliPath, {\n\t\t\tcwd: projectPath\n\t\t}, ( error, stdout, stderr ) => {\n\t\t\tresolve( {\n\t\t\t\texitCode: codecovProcess.exitCode,\n\t\t\t\tstdout,\n\t\t\t\tstderr\n\t\t\t} );\n\t\t} );\n\t} );\n}\n\nexport default codecov;\n","/* istanbul ignore file */\n\nimport Runner from './Runner.js';\nimport Logger from './Logger.js';\nimport RunController from './RunController.js';\n\nfunction mlt( config ) {\n\tconst runner = new Runner();\n\tconst logger = new Logger( runner );\n\tconst controller = new RunController( runner, logger, config );\n\n\treturn controller;\n}\n\nexport default mlt;\n","import Mocha from 'mocha';\nimport globPromise from './helpers/globPromise.js';\nimport MochaReporter from './reporters/MochaReporter.js';\nimport addChaiHook from './hooks/chai.js';\nimport addBabelHook from './hooks/babel.js';\nimport addIstanbulHook from './hooks/istanbul.js';\n\nasync function tester( projectPath ) {\n\tif ( typeof projectPath !== 'string' || projectPath.length === 0 ) {\n\t\tthrow new TypeError( 'Provided path must be a non-empty string' );\n\t}\n\n\taddChaiHook( projectPath );\n\taddBabelHook( projectPath );\n\taddIstanbulHook( projectPath );\n\tclearCache( projectPath );\n\n\tconst mocha = new Mocha( {\n\t\treporter: MochaReporter,\n\t\ttimeout: 30000\n\t} );\n\tconst tests = await findTestFiles( projectPath );\n\n\ttests.forEach( ( test ) => {\n\t\tmocha.addFile( test );\n\t} );\n\n\treturn new Promise( ( resolve ) => {\n\t\tmocha.run( () => {\n\t\t\tresolve( {\n\t\t\t\tname: 'tester',\n\t\t\t\t...mocha.suite.results,\n\t\t\t\tcoverage: global.__mltCoverage__\n\t\t\t} );\n\t\t} );\n\t} );\n}\n\nfunction findTestFiles( cwd ) {\n\treturn globPromise( 'tests/**/*.js', {\n\t\tcwd,\n\t\tignore: [\n\t\t\t'tests/__fixtures__/**/*.js',\n\t\t\t'tests/__helpers__/**/*.js'\n\t\t],\n\t\trealpath: true\n\t} );\n}\n\nfunction clearCache( path ) {\n\tObject.keys( require.cache ).forEach( ( key ) => {\n\t\tif ( key.startsWith( path ) ) {\n\t\t\tdelete require.cache[ key ];\n\t\t}\n\t} );\n}\n\nexport default tester;\n","import babelRegister from '@babel/register';\nimport preset from '@babel/preset-env';\n\nfunction addBabelHook() {\n\tbabelRegister( {\n\t\tcache: false,\n\t\tcaller: {\n\t\t\tname: 'mlt',\n\t\t\tsupportsStaticESM: false,\n\t\t\tsupportsDynamicImport: true\n\t\t},\n\t\tbabelrc: false,\n\t\tpresets: [\n\t\t\t[\n\t\t\t\tpreset,\n\t\t\t\t{\n\t\t\t\t\ttargets: {\n\t\t\t\t\t\tnode: '16.12.0'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\t} );\n}\n\nexport default addBabelHook;\n","import { resolve as resolvePath } from 'path';\nimport { createInstrumenter } from 'istanbul-lib-instrument';\nimport { addHook } from 'pirates';\n\nfunction addIstanbulHook( projectPath ) {\n\tconst srcPath = resolvePath( projectPath, 'src' );\n\tconst instrumenter = createInstrumenter( {\n\t\tcoverageVariable: '__mltCoverage__'\n\t} );\n\n\taddHook(\n\t\t( code, fileName ) => {\n\t\t\treturn instrumenter.instrumentSync( code, fileName );\n\t\t},\n\n\t\t{\n\t\t\texts: [ '.js' ],\n\t\t\tmatcher( path ) {\n\t\t\t\treturn path.startsWith( srcPath );\n\t\t\t}\n\t\t}\n\t);\n}\n\nexport default addIstanbulHook;\n","const { expose } = require( 'threads/worker' );\nconst { linter } = require( '../index.js' );\n\nexpose( ( projectPath ) => {\n\treturn linter( projectPath );\n} );\n"],"names":["listenersSymbol","Symbol","onceListenersSymbol","EventEmitter","constructor","this","Map","on","name","listener","_getListenersCollection","add","once","eventName","off","listeners","onceListeners","delete","async","eventData","has","get","newCollection","Set","set","stepsSymbol","stepResultsSymbol","Runner","super","Object","freeze","steps","addStep","step","isValidStep","map","id","TypeError","addSteps","Array","isArray","every","forEach","path","process","cwd","value","trim","length","emit","_processSteps","finish","result","shift","context","_constructContext","requiresParameter","_constructRequiresParameter","run","stepResults","results","isValidResult","ok","error","requires","reduce","parameter","stepId","projectPath","stepIds","isIdValid","isLoweredCase","toLowerCase","isSpaceless","test","isValidStepId","isNameValid","isRunValid","isReporterValid","report","isRequiresValid","availableSteps","includes","isValidRequires","LoggerColor","Enumify","AUTO","BLUE","YELLOW","GREEN","RED","closeEnum","LoggerType","LOG","ERROR","colorMethods","chalk","blue","yellow","green","red","spinner","Spinner","label","Logger","runner","logger","onStart","bind","onStepStart","onStepEnd","onEnd","onError","addListeners","log","type","color","consoleMethod","colorMethod","console","show","hide","bold","codeCoverage","data","createCoverageMap","watchable","spawnWorker","eslint","ESLint","formattedResults","loadFormatter","format","output","coverage","coverageMap","libReport","createContext","dir","resolvePath","defaultSummarizer","watermarks","statements","functions","branches","lines","lcovReport","reports","create","textReport","execute","skipped","stdout","stderr","workerPath","workerArgs","worker","Worker","workerAPI","spawn","Thread","terminate","configSymbol","bannerEmittedSymbol","isInTheMiddleOfRunSymbol","scheduledRunSymbol","RunController","config","watcher","continuous","_init","exitCode","watch","chokidar","persistent","ignoreInitial","scheduleRun","start","isWatch","requestedSteps","preparedSteps","filteredSteps","find","invalidSteps","filter","stepNames","join","prepareSteps","globPromise","promisify","glob","isOk","errorCount","Base","Spec","reporters","MochaReporter","originalConsoleLog","consoleLog","args","push","file","state","title","suite","chaiPreamble","added","chmod","promises","streamPipeline","pipeline","useEslintrc","baseConfig","extends","overrideConfig","ignorePatterns","filesToLint","candidates","candidatesPromises","candidate","Promise","all","filteredCandidates","found","i","prepareExistentFilePaths","lintFiles","testsPath","fixturesPath","addHook","code","startsWith","exts","matcher","addChaiHook","babelRegister","cache","caller","supportsStaticESM","supportsDynamicImport","babelrc","presets","preset","targets","node","srcPath","instrumenter","createInstrumenter","coverageVariable","fileName","instrumentSync","addIstanbulHook","keys","require","key","clearCache","mocha","Mocha","reporter","timeout","ignore","realpath","addFile","resolve","global","__mltCoverage__","resultsTemplate","isCI","env","NO_CODECOV","assign","codecovPath","platform","platformFile","linux","darwin","win32","uploaderURL","uploaderData","url","reject","response","statusCode","uploaderPath","uploaderFileStream","createWriteStream","Error","fetchUploader","cliPath","codecovProcess","exec","executeCLI","expose","require$$0","linter","require$$1"],"mappings":"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"}