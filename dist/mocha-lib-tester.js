/*! @comandeer/mocha-lib-tester v0.4.0 | (c) 2021 Comandeer | MIT license (see LICENSE) */
"use strict";var e=require("events"),t=require("chalk"),r=require("enumify"),n=require("chokidar"),s=require("eslint"),o=require("glob"),i=require("eslint/lib/cli-engine/formatters/stylish.js"),a=require("mocha"),c=require("util"),u=require("path"),l=require("pirates"),d=require("@babel/register"),h=require("@babel/preset-env"),p=require("istanbul-lib-instrument"),f=require("istanbul-lib-coverage"),m=require("istanbul-lib-report"),g=require("istanbul-reports"),y=require("child_process"),w=require("is-ci"),b=require("npm-run-path");function E(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var v=E(e),S=E(t),T=E(n),q=E(i),R=E(a),C=E(d),j=E(h),L=E(m),x=E(g),O=E(w),k=E(b);const P=Symbol("steps");class _ extends v.default{constructor(){super(),this[P]=Object.freeze(new Set)}get steps(){return this[P]}addStep(e){if(!W(e))throw new TypeError("Provided object must be a valid step definition");this.steps.add(e)}addSteps(e){if(!(Array.isArray(e)&&e.every((e=>W(e)))))throw new TypeError("Provided array must contain only valid step definitions");e.forEach((e=>{this.addStep(e)}))}run(e=process.cwd()){if(!("string"==typeof(t=e)&&t.trim().length>0))throw new TypeError("Provided path must be a non-empty string");var t;this.emit("start");const r=[...this.steps];return this._processSteps(r,e)}async _processSteps(e,t){const r=e=>(this.emit("end",e),e),n=e.shift();if(!n)return r(!0);this.emit("step:start",n);try{const s=await n.run(t);if(!function(e){if(!e||"object"!=typeof e)return!1;const t=e.results&&"object"==typeof e.results,r="function"==typeof e.reporter;return t&&r}(s))throw new TypeError(`Step ${n.name} didn't return correct results`);if(this.emit("step:end",n,s),!s.ok)return r(!1);if(0===e.length)return r(!0)}catch(e){return this.emit("error",e),r(!1)}return this._processSteps(e,t)}}function W(e){if(!e||"object"!=typeof e)return!1;const t=function(e){if("string"!=typeof e||0===e.trim().length)return!1;const t=e===e.toLowerCase(),r=!/\s/.test(e);return t&&r}(e.id),r="string"==typeof e.name&&e.name.trim().length>0,n="function"==typeof e.run;return t&&r&&n}class A extends r.Enumify{}A.AUTO=new A,A.BLUE=new A,A.YELLOW=new A,A.GREEN=new A,A.RED=new A,A.closeEnum();class U extends r.Enumify{}U.LOG=new U,U.ERROR=new U,U.closeEnum();const $=new Map([[A.AUTO,e=>e],[A.BLUE,e=>S.default.blue(e)],[A.YELLOW,e=>S.default.yellow(e)],[A.GREEN,e=>S.default.green(e)],[A.RED,e=>S.default.red(e)]]);class D{constructor(e){if(!(e instanceof v.default))throw new TypeError("The passed runner parameter is not an EventEmitter instance");this.runner=e,function(e){const t=e.runner;t.on("start",e.onStart.bind(e)),t.on("step:start",e.onStepStart.bind(e)),t.on("step:end",e.onStepEnd.bind(e)),t.on("end",e.onEnd.bind(e)),t.on("error",e.onError.bind(e))}(this)}log(e,{type:t=U.LOG,color:r=A.AUTO}={}){if(!(t instanceof U))throw new TypeError("Type option must be a LoggerType instance");if(!(r instanceof A))throw new TypeError("Color option must a LoggerColor instance");const n=t===U.LOG?"log":"error",s=$.get(r);console[n](s(e))}onStart(){this.log("Executing testsâ€¦",{color:A.YELLOW})}onStepStart({name:e}){this.log(`---${e}---`,{color:A.BLUE})}onStepEnd({name:e},{ok:t,results:r,reporter:n}){if(n(r,this),!t)return this.log(`Step ${S.default.bold(e)} failed with errors. Skipping subsequent steps.`,{color:A.RED,type:U.ERROR});this.log(`Step ${S.default.bold(e)} finished successfully.`,{color:A.GREEN})}onEnd(e){if(!e)return this.log("There were some errors alonside the way ðŸ˜¿",{color:A.RED});this.log("All steps finished correctly ðŸŽ‰",{color:A.GREEN})}onError(e){this.log("ðŸš¨ Error occured:",{color:A.RED,type:U.ERROR}),this.log(e,{type:U.ERROR})}}function G(e,t){t.log(q.default(e))}function N(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");return new s.ESLint({useEslintrc:!1,cwd:e,baseConfig:{extends:"@comandeer/eslint-config"},overrideConfig:{ignorePatterns:["tests/fixtures/**/*.js"]}}).lintFiles((t=e,["src/**/*.js","bin/**/*","tests/**/*.js"].filter((e=>o.sync(e,{cwd:t}).length>0)))).then((e=>({name:"linter",ok:M(e),results:e,reporter:G})));var t}function M(e){return e.every((({errorCount:e})=>0===e))}const{Base:B,Spec:Y}=a.reporters;class I extends Y{constructor(e){const t=[],r={};let n=!0;const s=B.consoleLog;B.consoleLog=function(...e){t.push(c.format(...e))},super(e),e.on("test end",(({file:e,state:t,title:n})=>{void 0===r[e]&&(r[e]={}),r[e][n]=t})),e.once("fail",(()=>{n=!1})),e.once("end",(()=>{B.consoleLog=s,e.suite.results={results:r,ok:n,reporter(e,r){r.log(t.join("\n"))}}}))}}const z='import{expect}from"chai";import{use as chaiUse}from"chai";import sinon from"sinon";import chaiAsPromised from"chai-as-promised";import sinonChai from"sinon-chai";import{noCallThru as pqNoCallThru}from"proxyquire";chaiUse(chaiAsPromised),chaiUse(sinonChai);const proxyquire=pqNoCallThru();',F=new Set;function H(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");!function(e){if(F.has(e))return;const t=u.resolve(e,"tests"),r=u.resolve(t,"fixtures");l.addHook((e=>e.startsWith(z)?e:`${z}${e}`),{exts:[".js"],matcher:e=>e.startsWith(t)&&!e.startsWith(r)}),F.add(e)}(e),C.default({cache:!1,babelrc:!1,presets:[[j.default,{targets:{node:"12.0.0"}}]]}),function(e){const t=u.resolve(e,"src"),r=p.createInstrumenter({coverageVariable:"__mltCoverage__"});l.addHook(((e,t)=>r.instrumentSync(e,t)),{exts:[".js"],matcher:e=>e.startsWith(t)})}(e),function(e){Object.keys(require.cache).forEach((t=>{t.startsWith(e)&&delete require.cache[t]}))}(e);const t=new R.default({reporter:I,timeout:15e3});var r;return(r=e,o.sync("tests/**/*.js",{cwd:r,ignore:["tests/fixtures/**/*.js","tests/helpers/**/*.js"],realpath:!0})).forEach((e=>{t.addFile(e)})),new Promise((e=>{t.run((()=>{e({name:"tester",...t.suite.results})}))}))}function V(e){return function(t){const r=L.default.createContext({dir:u.resolve(e,".coverage"),defaultSummarizer:"nested",watermarks:{statements:[50,80],functions:[50,80],branches:[50,80],lines:[50,80]},coverageMap:t}),n=x.default.create("lcovonly"),s=x.default.create("text");n.execute(r),s.execute(r)}}function J(e,t){e.skipped?t.log("CodeCov upload skipped",{color:A.YELLOW}):(t.log(e.stdout),e.stderr&&t.log(e.stderr,{type:U.ERROR,color:A.RED}))}function K(e){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");const t={name:"codecov",reporter:J};return!O.default||process.env.NO_CODECOV?Object.assign({},t,{ok:!0,results:{skipped:!0}}):function(e){return new Promise((t=>{const r=y.exec("codecov",{cwd:e,env:k.default.env()},((e,n,s)=>{t({exitCode:r.exitCode,stdout:n,stderr:s})}))}))}(e).then((({exitCode:e,stdout:r,stderr:n})=>Object.assign({},t,{ok:0===e,results:{stdout:r,stderr:n}})))}const Q=[{id:"lint",name:"Linter",watchable:!0,run:e=>N(e)},{id:"test",name:"Tester",watchable:!0,run:e=>H(e)},{id:"coverage",name:"Code Coverage",watchable:!0,run:e=>function(e,t){if("string"!=typeof e||0===e.length)throw new TypeError("Provided path must be a non-empty string");if(!t||"object"!=typeof t||Array.isArray(t))throw new TypeError("Provided code coverage data must be an object");const r=f.createCoverageMap(t);return Promise.resolve({name:"code coverage",ok:!0,results:r,reporter:V(e)})}(e,global.__mltCoverage__)},{id:"codecov",name:"CodeCov",watchable:!1,run:e=>K(e)}];const X=Symbol("config"),Z=Symbol("bannerEmitted"),ee=Symbol("isInTheMiddleOfRun"),te=Symbol("scheduledRun");class re{constructor(e,t,r={}){if(!(e instanceof _))throw new TypeError("The runner parameter must be a valid Runner instance.");if(!(t instanceof D))throw new TypeError("The logger parameter must be a valid Logger instance.");if(!r||Array.isArray(r)||"object"!=typeof r)throw new TypeError("The config parameter must be an object.");this.runner=e,this.logger=t,this.watcher=null,this.continuous=!1,this[X]=r,this[Z]=!1,this[ee]=!1,this._init(r)}async run(){if(this[Z]||(this.logger.log("MLT v0.4.0"),this[Z]=!0),this[ee])return;this[ee]=!0;const e=await this.runner.run(this.path)?0:1;return this[ee]=!1,e}watch(){const e=T.default.watch("{bin,src,tests}/**/*.js",{persistent:!0,ignoreInitial:!0,cwd:process.cwd()});return e.on("all",(()=>{this.scheduleRun()})),this.continuous=!0,this.watcher=e,e}scheduleRun(){if(!this[te]){if(!this[ee])return this.run();this[te]=!0,this.runner.once("end",(()=>{this[te]=!1,this.run()}))}}start(){return this[X].isWatch&&this.watch(),this.run()}_init({path:e=process.cwd(),requestedSteps:t=["lint","test","coverage","codecov"],isWatch:r=!1}={}){this.path=e;const n=function({requestedSteps:e,isWatch:t=!1}={}){const r=e.map((e=>Q.find((t=>t.id===e))||e)),n=r.filter((e=>"string"==typeof e));if(n.length>0){const e=n.map((e=>`"${e}"`)).join(", ");throw new TypeError(`Provided step names (${e}) are incorrect`)}if(t)return r.filter((e=>e.watchable));return r}({requestedSteps:t,isWatch:r});this.runner.addSteps(n)}}module.exports=function(e){const t=new _,r=new D(t);return new re(t,r,e)};
//# sourceMappingURL=mocha-lib-tester.js.map
